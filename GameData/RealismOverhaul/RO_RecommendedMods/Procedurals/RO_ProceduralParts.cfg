@PART[proceduralBattery]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	%category = Electrical
	@title = Battery [Procedural]
	@manufacturer = Generic

	@maxTemp = 673.15
	%skinMaxTemp = 773.15

	@MODULE[TankContentSwitcher]
	{
		@TANK_TYPE_OPTION[Electric]
		{
			@dryDensity = 1.44
			@RESOURCE[ElectricCharge]
			{
				@unitsPerT = 265000
			}
		}
	}
}
@PART[proceduralStructural]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Structure [Procedural]
	@manufacturer = Generic

	@maxTemp = 673.15
	%skinMaxTemp = 773.15

	!MODULE[ModuleConnectedLivingSpace],*{}
}
@PART[proceduralStackDecoupler]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Decoupler [Procedural]
	%category = Coupling
	@manufacturer = Generic

	@maxTemp = 673.15
	%skinMaxTemp = 773.15
}
@PART[proceduralNoseCone]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Nose Cone [Procedural]
	@manufacturer = Generic

	@attachRules = 1,1,1,1,0 // allow surface attachment
}
@PART[proceduralHeatshield]:FOR[RealismOverhaul]
{
	%RSSROConfig = False

	%category = Thermal
	@title = Heat Shield [Procedural]
	@manufacturer = Generic

	@maxTemp = 3673.15
	%skinMaxTemp = 3773.15
}
@PART[proceduralSRBRealFuels]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Solid Rocket Motor [Procedural]
	@manufacturer = Generic

	@maxTemp = 673.15
	%skinMaxTemp = 773.15

	@MODULE[ModuleGimbal]
	{
		%gimbalRange = 5.0
		%useGimbalResponseSpeed = true
		%gimbalResponseSpeed = 16
	}
	@MODULE[ProceduralSRB]
	{
		@SRB_BELL[Surface]
		{
			@gimbalRange = 5.0
		}
		@SRB_BELL[Vacuum]
		{
			@gimbalRange = 3.5
		}
	}
}
@PART[proceduralTankRealFuels]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Tank [Procedural]
	@manufacturer = Generic
	@description = Switchable procedural tank. Comes in various levels of insulation, rigid/balloon, and pressurized/highly-pressurized forms. Defaults to type Default but can be switched to other types in the part popup menu.

	@maxTemp = 773.15
	%skinMaxTemp = 873.15

	@MODULE[ModuleFuelTanks]:HAS[~typeAvailable[ElectricPropulsion]]
	{
		typeAvailable = ElectricPropulsion
	}
	@MODULE[ModuleFuelTanks]:HAS[~typeAvailable[LifeSupport]]
	{
		typeAvailable = LifeSupport
	}
}
+PART[proceduralTankRealFuels]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@name = RO-ProcTankSpaceplane

	@title = Tank [Procedural, Shielded]
	@manufacturer = Generic
	@description = Heat-shielded switchable procedural tank with heat shielded Includes normal (Structural), highly pressurized (Fuselage), and cryogenic tank options. Rated for LEO reentries on a spaceplane.

	@maxTemp = 1473.14
	%skinMaxTemp = 2473.15

	@MODULE[ModuleFuelTanks]
	{
		@type = Structural
		!typeAvailable,* = DEL
		typeAvailable = Fuselage
		typeAvailable = Structural
	}
}
@PART[proceduralTankKethane]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Tank - Kethane [Procedural]
	@manufacturer = Generic

	@maxTemp = 773.15
	%skinMaxTemp = 873.15
}
@PART[proceduralTankTAC]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Tank - Life Support [Procedural]
	@manufacturer = Generic

	@maxTemp = 673.15
	%skinMaxTemp = 773.15

	@MODULE[TankContentSwitcher]
	{
		@TANK_TYPE_OPTION[LifeSupport]
		{
			@RESOURCE[Oxygen]
			{
				@unitsPerKL = 80254.777
			}
			@RESOURCE[Food]
			{
				@unitsPerKL = 382.166
			}
			@RESOURCE[Water]
			{
				@unitsPerKL = 216.561
			}
		}
		@TANK_TYPE_OPTION[LifeSupportWaste]
		{
			!RESOURCE[CarbonDioxide]
			{
			}
			@RESOURCE[Waste]
			{
				@unitsPerKL = 357.143
			}
			@RESOURCE[WasteWater]
			{
				@unitsPerKL = 642.857
			}
		}
		@TANK_TYPE_OPTION[Oxygen]
		{
			@RESOURCE[Oxygen]
			{
				@unitsPerKL = 200000
			}
		}
		!TANK_TYPE_OPTION[CarbonDioxide]
		{
		}
		TANK_TYPE_OPTION
		{
			name = CO2Scrubber
			dryDensity = 0.25
			RESOURCE
			{
				name = LithiumPeroxide
				unitsPerKL = 1000
				forceEmpty = true
			}
			RESOURCE
			{
				name = LithiumHydroxide
				unitsPerKL = 1000
				forceEmpty = true
			}
			RESOURCE
			{
				name = PotassiumSuperoxide
				unitsPerKL = 1000
				forceEmpty = true
			}
		}
	}
}
@PART[proceduralTankOre]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Tank - Ore [Procedural]
	@manufacturer = Generic

	@maxTemp = 673.15
	%skinMaxTemp = 773.15
}
// Extend procedural structural parts to create Procedural Crew Tubes - Parts that can be internals traversed as understood by ConnectedLivingSpace. The parts are more massive than the structural equivalent and more expensive to reflect the additional shielding etc in the part. They also have a minimum diameter of 0.8m. CLS support is removed form the regular structural parts.
+PART[proceduralStructural]:NEEDS[ProceduralParts]:BEFORE[RealismOverhaul] // could maybe be FIRST but we want to catch any prior changes.
{
	@name = proceduralCrewTube
}
@PART[proceduralCrewTube]:FOR[RealismOverhaul] // do our patching here.
{
	@title = Crew Tube [Procedural]
	@manufacturer = Generic
	@description = Air tight pressure hull protected by a thick layer of Kevlar and carbon nanofiber blankets to provide protection against micro-meteorites as well as thermal insulation and limited radiation shielding. These parts provide safe and structurally intact internal spaces to allow crew to move between crewed parts. 

	@maxTemp = 673.15
	%skinMaxTemp = 773.15

	@cost *= 5
	@entryCost *= 3.5
	%TechRequired = spaceExploration
	%RSSROConfig = True

	@MODULE[ProceduralPart]
	{
		!TECHLIMIT,*
		{
		}
		TECHLIMIT
		{
			name = spaceExploration
			diameterMax = 2
			lengthMax = 4
			volumeMax = Infinity
		}
		TECHLIMIT
		{
			name = advExploration
			diameterMax = 3
			lengthMax = 8
			volumeMax = Infinity
		}
		TECHLIMIT
		{
			name = composites
			diameterMax = 4.5
			lengthMax = 20
			volumeMax = Infinity
		}
		TECHLIMIT
		{
			name = metaMaterials
			diameterMax = Infinity
			lengthMax = Infinity
			volumeMax = Infinity
		}
		%diameterMin = 0.8
		%lengthMin = 0.5
	}
	@MODULE[TankContentSwitcher]
	{
		@TANK_TYPE_OPTION[Structural] 
		{
			@dryDensity *= 2.5
		}
	}
	!MODULE[ModuleConnectedLivingSpace],*
	{
	}
	MODULE
	{
		name = ModuleConnectedLivingSpace
		passable = true
		surfaceAttachmentsPassable = true
		passableWhenSurfaceAttached = true
	}
}
